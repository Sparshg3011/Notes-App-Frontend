{"ast":null,"code":"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { store } from \"../store\";\nimport { CREATE_NOTES_ERROR, CREATE_NOTES_LOADING, CREATE_NOTES_SUCCESS, DELETE_NOTES_ERROR, DELETE_NOTES_LOADING, DELETE_NOTES_SUCCESS, GET_NOTES_ERROR, GET_NOTES_LOADING, GET_NOTES_SUCCESS, UPDATE_NOTES_ERROR, UPDATE_NOTES_LOADING, UPDATE_NOTES_SUCCESS } from \"./note_types\";\nimport { BASE_URL } from \"../../constants/config\";\nimport { LOGOUT } from \"../users/user_types\";\nexport const getNotes = () => async dispatch => {\n  const {\n    token\n  } = store.getState().userReducer;\n  dispatch({\n    type: GET_NOTES_LOADING\n  });\n  try {\n    const res = await axios(BASE_URL + \"/note\", {\n      method: \"get\",\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      status,\n      message,\n      data\n    } = res.data;\n    if (status == 1) dispatch({\n      type: GET_NOTES_SUCCESS,\n      payload: data\n    });else if (status == 2) dispatch({\n      type: LOGOUT\n    });else dispatch({\n      type: GET_NOTES_ERROR\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_NOTES_ERROR\n    });\n  }\n};\nexport const createNotes = obj => async dispatch => {\n  const {\n    token\n  } = store.getState().userReducer;\n  dispatch({\n    type: CREATE_NOTES_LOADING\n  });\n  try {\n    const res = await axios(BASE_URL + \"/note/create\", {\n      method: \"post\",\n      data: obj,\n      headers: {\n        Authorization: token\n      }\n    });\n    const {\n      status,\n      message\n    } = res.data;\n    if (status == 1) {\n      dispatch({\n        type: CREATE_NOTES_SUCCESS\n      });\n      dispatch(getNotes());\n    } else if (status == 2) dispatch({\n      type: LOGOUT\n    });else dispatch({\n      type: CREATE_NOTES_ERROR\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_NOTES_ERROR\n    });\n  }\n};\nexport const updateNotes = (id, obj) => async dispatch => {\n  const {\n    token\n  } = store.getState().userReducer;\n  dispatch({\n    type: UPDATE_NOTES_LOADING\n  });\n  try {\n    const res = await axios(BASE_URL + \"/note/\", {\n      method: \"patch\",\n      data: obj,\n      headers: {\n        Authorization: token,\n        id: id\n      }\n    });\n    const {\n      status,\n      message\n    } = res.data;\n    if (status == 1) {\n      dispatch({\n        type: UPDATE_NOTES_SUCCESS\n      });\n      dispatch(getNotes());\n    } else if (status == 2) dispatch({\n      type: LOGOUT\n    });else dispatch({\n      type: UPDATE_NOTES_ERROR\n    });\n  } catch (error) {\n    dispatch({\n      type: UPDATE_NOTES_ERROR\n    });\n  }\n};\nexport const deleteNotes = id => async dispatch => {\n  const {\n    token\n  } = store.getState().userReducer;\n  dispatch({\n    type: DELETE_NOTES_LOADING\n  });\n  try {\n    const res = await axios(BASE_URL + \"/note/\", {\n      method: \"delete\",\n      headers: {\n        Authorization: token,\n        id: id\n      }\n    });\n    const {\n      status,\n      message\n    } = res.data;\n    if (status == 1) {\n      dispatch({\n        type: DELETE_NOTES_SUCCESS\n      });\n      dispatch(getNotes());\n    } else if (status == 2) dispatch({\n      type: LOGOUT\n    });else dispatch({\n      type: DELETE_NOTES_ERROR\n    });\n  } catch (error) {\n    dispatch({\n      type: DELETE_NOTES_ERROR\n    });\n  }\n};","map":{"version":3,"names":["axios","useSelector","store","CREATE_NOTES_ERROR","CREATE_NOTES_LOADING","CREATE_NOTES_SUCCESS","DELETE_NOTES_ERROR","DELETE_NOTES_LOADING","DELETE_NOTES_SUCCESS","GET_NOTES_ERROR","GET_NOTES_LOADING","GET_NOTES_SUCCESS","UPDATE_NOTES_ERROR","UPDATE_NOTES_LOADING","UPDATE_NOTES_SUCCESS","BASE_URL","LOGOUT","getNotes","dispatch","token","getState","userReducer","type","res","method","headers","Authorization","status","message","data","payload","error","createNotes","obj","updateNotes","id","deleteNotes"],"sources":["/Users/sparshgupta/Desktop/react-notes-app-master/notes-frontend/src/redux/notes/note_actions.js"],"sourcesContent":["import axios from \"axios\"\nimport { useSelector } from \"react-redux\"\nimport { store } from \"../store\"\nimport { CREATE_NOTES_ERROR, CREATE_NOTES_LOADING, CREATE_NOTES_SUCCESS, DELETE_NOTES_ERROR, DELETE_NOTES_LOADING, DELETE_NOTES_SUCCESS, GET_NOTES_ERROR, GET_NOTES_LOADING, GET_NOTES_SUCCESS, UPDATE_NOTES_ERROR, UPDATE_NOTES_LOADING, UPDATE_NOTES_SUCCESS } from \"./note_types\"\nimport { BASE_URL } from \"../../constants/config\"\nimport { LOGOUT } from \"../users/user_types\"\n\n\nexport const getNotes = ()=>async(dispatch)=>{\n    const {token} = store.getState().userReducer\n    dispatch({type: GET_NOTES_LOADING})\n    try {\n        const res = await axios(BASE_URL+\"/note\", {\n            method: \"get\",\n            headers: {\n                Authorization: token\n            }\n        })\n        const {status, message, data} = res.data\n        if(status == 1)\n        dispatch({type: GET_NOTES_SUCCESS, payload: data})\n        else if(status == 2)\n        dispatch({type: LOGOUT})\n        else\n        dispatch({type: GET_NOTES_ERROR})\n    } catch (error) {\n        dispatch({type: GET_NOTES_ERROR})\n    }\n}\n\nexport const createNotes = (obj)=>async(dispatch)=>{\n    const {token} = store.getState().userReducer\n    dispatch({type: CREATE_NOTES_LOADING})\n    try {\n        const res = await axios(BASE_URL+\"/note/create\", {\n            method: \"post\",\n            data: obj,\n            headers: {\n                Authorization: token\n            }\n        })\n        const {status, message} = res.data\n        if(status == 1)\n        {\n            dispatch({type: CREATE_NOTES_SUCCESS})\n            dispatch(getNotes())\n        }\n        else if(status == 2)\n        dispatch({type: LOGOUT})\n        else\n        dispatch({type: CREATE_NOTES_ERROR})\n    } catch (error) {\n        dispatch({type: CREATE_NOTES_ERROR})\n    }\n}\n\nexport const updateNotes = (id, obj)=>async(dispatch)=>{\n    const {token} = store.getState().userReducer\n    dispatch({type: UPDATE_NOTES_LOADING})\n    try {\n        const res = await axios(BASE_URL+\"/note/\", {\n            method: \"patch\",\n            data: obj,\n            headers: {\n                Authorization: token,\n                id: id\n            }\n        })\n        const {status, message} = res.data\n        if(status == 1)\n        {\n            dispatch({type: UPDATE_NOTES_SUCCESS})\n            dispatch(getNotes())\n        }\n        else if(status == 2)\n        dispatch({type: LOGOUT})\n        else\n        dispatch({type: UPDATE_NOTES_ERROR})\n    } catch (error) {\n        dispatch({type: UPDATE_NOTES_ERROR})\n    }\n}\n\nexport const deleteNotes = (id)=>async(dispatch)=>{\n    const {token} = store.getState().userReducer\n    dispatch({type: DELETE_NOTES_LOADING})\n    try {\n        const res = await axios(BASE_URL+\"/note/\", {\n            method: \"delete\",\n            headers: {\n                Authorization: token,\n                id: id\n            }\n        })\n        const {status, message} = res.data\n        if(status == 1)\n        {\n            dispatch({type: DELETE_NOTES_SUCCESS})\n            dispatch(getNotes())\n        }\n        else if(status == 2)\n        dispatch({type: LOGOUT})\n        else\n        dispatch({type: DELETE_NOTES_ERROR})\n    } catch (error) {\n        dispatch({type: DELETE_NOTES_ERROR})\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}