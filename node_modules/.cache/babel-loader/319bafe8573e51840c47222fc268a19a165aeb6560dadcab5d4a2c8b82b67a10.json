{"ast":null,"code":"var _jsxFileName = \"/Users/sparshgupta/Desktop/react-notes-app-master/notes-frontend/src/pages/Notespage.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Grid, IconButton, Input, Textarea, useDisclosure } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getNotes, createNotes } from \"../redux/notes/note_actions\";\nimport NoteCard from \"../components/Notes/NoteCard/NoteCard\";\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton } from \"@chakra-ui/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Notespage() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    data\n  } = useSelector(state => state.noteReducer);\n  const [notes, setNotes] = useState([]);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const initialRef = useRef(null);\n  const finalRef = useRef(null);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  useEffect(() => {\n    dispatch(getNotes());\n  }, [dispatch]);\n  useEffect(() => {\n    if (data.length > 0) {\n      setNotes(data);\n    }\n  }, [data]);\n  const createNote = () => {\n    dispatch(createNotes({\n      title,\n      body\n    }));\n    setNotes([{\n      title,\n      body\n    }, ...notes]);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 20,\n    padding: 8,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      gap: 10,\n      w: \"100%\",\n      margin: \"auto\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      children: notes === null || notes === void 0 ? void 0 : notes.map(el => /*#__PURE__*/_jsxDEV(NoteCard, {\n        ...el\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(IconButton, {\n        boxShadow: \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\",\n        position: \"fixed\",\n        w: \"60px\",\n        h: \"60px\",\n        bg: \"#5b9cf2\",\n        bottom: 0,\n        right: 0,\n        margin: 16,\n        icon: /*#__PURE__*/_jsxDEV(AddIcon, {\n          fontSize: 30\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 206\n        }, this),\n        onClick: onOpen,\n        children: \"Add a Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        initialFocusRef: initialRef,\n        finalFocusRef: finalRef,\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Create New Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            pb: 6,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              value: title,\n              placeholder: \"Please enter title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n              mt: 8,\n              value: body,\n              placeholder: 'Please enter description',\n              onChange: e => setBody(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              colorScheme: \"blue\",\n              mr: 3,\n              onClick: createNote,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: onClose,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n_s(Notespage, \"/nyfMfFW4SDxvDy5Moet9mNDJFQ=\", false, function () {\n  return [useDispatch, useSelector, useDisclosure];\n});\n_c = Notespage;\nvar _c;\n$RefreshReg$(_c, \"Notespage\");","map":{"version":3,"names":["Box","Button","Grid","IconButton","Input","Textarea","useDisclosure","AddIcon","useEffect","useRef","useState","useDispatch","useSelector","getNotes","createNotes","NoteCard","Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Notespage","_s","dispatch","loading","error","data","state","noteReducer","notes","setNotes","isOpen","onOpen","onClose","initialRef","finalRef","title","setTitle","body","setBody","length","createNote","mt","padding","children","gap","w","margin","gridTemplateColumns","map","el","id","fileName","_jsxFileName","lineNumber","columnNumber","boxShadow","position","h","bg","bottom","right","icon","fontSize","onClick","initialFocusRef","finalFocusRef","pb","value","placeholder","onChange","e","target","colorScheme","mr","_c","$RefreshReg$"],"sources":["/Users/sparshgupta/Desktop/react-notes-app-master/notes-frontend/src/pages/Notespage.jsx"],"sourcesContent":["import { Box, Button, Grid, IconButton, Input, Textarea, useDisclosure } from \"@chakra-ui/react\";\nimport { AddIcon } from \"@chakra-ui/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getNotes, createNotes } from \"../redux/notes/note_actions\";\nimport NoteCard from \"../components/Notes/NoteCard/NoteCard\";\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n} from \"@chakra-ui/react\";\n\nexport default function Notespage() {\n    const dispatch = useDispatch()\n    const { loading, error, data } = useSelector((state) => state.noteReducer)\n    const [notes, setNotes] = useState([])\n    const { isOpen, onOpen, onClose } = useDisclosure()\n    const initialRef = useRef(null)\n    const finalRef = useRef(null)\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n\n    useEffect(() => {\n        dispatch(getNotes())\n    }, [dispatch])\n\n    useEffect(() => {\n        if (data.length > 0) {\n            setNotes(data)\n        }\n    }, [data])\n\n    const createNote = () => {\n        dispatch(createNotes({ title, body }))\n        setNotes([{ title, body }, ...notes])\n        onClose()\n    }\n\n    return (\n        <Box mt={20} padding={8}>\n            <Grid gap={10} w={\"100%\"} margin={\"auto\"} gridTemplateColumns=\"repeat(4, 1fr)\">\n                {notes?.map((el) => <NoteCard key={el.id} {...el} />)}\n            </Grid>\n            <>\n                <IconButton boxShadow={\"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px;\"} position={\"fixed\"} w={\"60px\"} h={\"60px\"} bg={\"#5b9cf2\"} bottom={0} right={0} margin={16} icon={<AddIcon fontSize={30} />} onClick={onOpen}>Add a Note</IconButton>\n                <Modal\n                    initialFocusRef={initialRef}\n                    finalFocusRef={finalRef}\n                    isOpen={isOpen}\n                    onClose={onClose}\n                >\n                    <ModalOverlay />\n                    <ModalContent>\n                        <ModalHeader>Create New Note</ModalHeader>\n                        <ModalCloseButton />\n                        <ModalBody pb={6}>\n                            <Input value={title} placeholder=\"Please enter title\" onChange={(e) => setTitle(e.target.value)}></Input>\n                            <Textarea mt={8} value={body} placeholder={'Please enter description'} onChange={(e) => setBody(e.target.value)}></Textarea>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button colorScheme=\"blue\" mr={3} onClick={createNote}>\n                                Create\n                            </Button>\n                            <Button onClick={onClose}>Cancel</Button>\n                        </ModalFooter>\n                    </ModalContent>\n                </Modal>\n            </>\n        </Box>\n    )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}